@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@*@model IEnumerable<StoreProject.Models.Store>*@
@model StoreProject.ViewModels.Stores.StoreIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<link href="/css/PagedList.css" rel="stylesheet" type="text/css" />

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="container">
    <div class="row">
        <form asp-controller="Stores" asp-action="Index" method="Get">
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="Name" class="control label"></label>
                    <input asp-for="Name" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="Phone" class="control label"></label>
                    <input asp-for="Phone" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="control label"></label>
                    <input asp-for="Email" class="form-control" />
                </div>
                <div class="form-group">
                    <input type="Submit" Value="Filter" class="btn btn-primary" />
                </div>
            </div>
        </form>
    </div>

<table class="table">
    <thead>
        <tr>
            <th>
                    @Html.DisplayNameFor(model => model.Stores[0].StoreName)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.Stores[0].Phone)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.Stores[0].Email)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.Stores[0].Street)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.Stores[0].City)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.Stores[0].State)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.Stores[0].ZipCode)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
            @foreach (var item in Model.Stores)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StoreName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Street)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ZipCode)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.StoreId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.StoreId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.StoreId">Delete</a>
                    </td>
                </tr>
            }
    </tbody>
</table>
@Html.PagedListPager(Model.Stores, 
    page => Url.Action(nameof(Index), 
    new{pageNumber = page, Model.Name, Model.Phone, Model.Email}),
PagedListRenderOptions.ClassicPlusFirstAndLast)
</div>